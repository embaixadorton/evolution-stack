version: "3.8"

services:
  evolution_v2:
    restart: always
    image: atendai/evolution-api:v2.0.10
    depends_on:
      - evo_redis
      - evo_postgres
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolutionapi
    environment:
      - AUTHENTICATION_API_KEY=${AUTHENTICATION_API_KEY}
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=${AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES}
      - CACHE_LOCAL_ENABLED=${CACHE_LOCAL_ENABLED}
      - CACHE_REDIS_ENABLED=${CACHE_REDIS_ENABLED}
      - CACHE_REDIS_PREFIX_KEY=${CACHE_REDIS_PREFIX_KEY}
      - CACHE_REDIS_SAVE_INSTANCES=${CACHE_REDIS_SAVE_INSTANCES}
      - CACHE_REDIS_URI=${CACHE_REDIS_URI}
      - CHATWOOT_ENABLED=${CHATWOOT_ENABLED}
      - CHATWOOT_IMPORT_DATABASE_CONNECTION_URI=${CHATWOOT_IMPORT_DATABASE_CONNECTION_URI}
      - CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE=${CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE}
      - CHATWOOT_MESSAGE_DELETE=${CHATWOOT_MESSAGE_DELETE}
      - CHATWOOT_MESSAGE_READ=${CHATWOOT_MESSAGE_READ}
      - DATABASE_CONNECTION_CLIENT_NAME=${DATABASE_CONNECTION_CLIENT_NAME}
      - DATABASE_CONNECTION_URI=${DATABASE_CONNECTION_URI}
      - DATABASE_ENABLED=${DATABASE_ENABLED}
      - DATABASE_PROVIDER=${DATABASE_PROVIDER}
      - DATABASE_SAVE_DATA_CHATS=${DATABASE_SAVE_DATA_CHATS}
      - DATABASE_SAVE_DATA_CONTACTS=${DATABASE_SAVE_DATA_CONTACTS}
      - DATABASE_SAVE_DATA_HISTORIC=${DATABASE_SAVE_DATA_HISTORIC}
      - DATABASE_SAVE_DATA_INSTANCE=${DATABASE_SAVE_DATA_INSTANCE}
      - DATABASE_SAVE_DATA_LABELS=${DATABASE_SAVE_DATA_LABELS}
      - DATABASE_SAVE_DATA_NEW_MESSAGE=${DATABASE_SAVE_DATA_NEW_MESSAGE}
      - DATABASE_SAVE_MESSAGE_UPDATE=${DATABASE_SAVE_MESSAGE_UPDATE}
      - DEL_INSTANCE=${DEL_INSTANCE}
      - DIFY_ENABLED=${DIFY_ENABLED}
      - LANGUAGE=${LANGUAGE}
      - LOG_BAILEYS=${LOG_BAILEYS}
      - LOG_LEVEL=${LOG_LEVEL}
      - OPENAI_ENABLED=${OPENAI_ENABLED}
      - QRCODE_COLOR=${QRCODE_COLOR}
      - QRCODE_LIMIT=${QRCODE_LIMIT}
      - RABBITMQ_ENABLED=${RABBITMQ_ENABLED}
      - RABBITMQ_GLOBAL_ENABLED=${RABBITMQ_GLOBAL_ENABLED}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ENABLED=${S3_ENABLED}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_PORT=${S3_PORT}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_USE_SSL=${S3_USE_SSL}
      - SERVER_URL=${SERVER_URL}
      - SQS_ENABLED=${SQS_ENABLED}
      - TELEMETRY=${TELEMETRY}
      - TYPEBOT_API_VERSION=${TYPEBOT_API_VERSION}
      - TYPEBOT_ENABLE=${TYPEBOT_ENABLE}
      - WEBSOCKET_ENABLED=${WEBSOCKET_ENABLED}
    labels:
      - traefik.enable=true
      - traefik.http.routers.evolution_v2.rule=Host(`${EVOLUTION_DOMAIN}`)
      - traefik.http.routers.evolution_v2.entrypoints=web,websecure
      - traefik.http.routers.evolution_v2.tls.certresolver=leresolver
      - traefik.http.routers.evolution_v2.service=evolution_v2
      - traefik.http.services.evolution_v2.loadbalancer.server.port=8080
      - traefik.http.services.evolution_v2.loadbalancer.passHostHeader=true

  evo_postgres:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - evolutionapi
    volumes:
      - evo_postgres_data:/var/lib/postgresql/data

  evo_redis:
    image: redis:latest
    restart: always
    volumes:
      - evo_redis:/data
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    networks:
      - evolutionapi

  evo_minio:
    image: quay.io/minio/minio:RELEASE.2024-03-26T22-10-45Z
    restart: always
    command: server /data --console-address ":9001"
    networks:
      - evolutionapi
    volumes:
      - evo_minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
      - MINIO_SERVER_URL=${MINIO_SERVER_URL}
      - MINIO_VOLUMES=/data
      - CONSOLE_MINIO_SERVER=${MINIO_SERVER_URL}
      - MINIO_OPTS=--console-address=":9001"
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio_public.rule=Host(`${MINIO_DOMAIN}`)
      - traefik.http.routers.minio_public.entrypoints=web,websecure
      - traefik.http.routers.minio_public.tls.certresolver=leresolver
      - traefik.http.services.minio_public.loadbalancer.server.port=9000
      - traefik.http.services.minio_public.loadbalancer.passHostHeader=true
      - traefik.http.routers.minio_public.service=minio_public

      - traefik.http.routers.minio_console.rule=Host(`${MINIO_CONSOLE_DOMAIN}`)
      - traefik.http.routers.minio_console.entrypoints=web,websecure
      - traefik.http.routers.minio_console.tls.certresolver=leresolver
      - traefik.http.services.minio_console.loadbalancer.server.port=9001
      - traefik.http.services.minio_console.loadbalancer.passHostHeader=true
      - traefik.http.routers.minio_console.service=minio_console

  rabbitmq:
    image: rabbitmq:management
    restart: always
    command: rabbitmq-server
    networks:
      - evolutionapi
    hostname: rabbitmq
    volumes:
      - evo_rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

volumes:
  evo_rabbitmq_data:
  evo_minio_data:
  evo_redis:
  evolution_instances:
  evo_postgres_data:

networks:
  evolutionapi:
    external: true
